const {BOT_TOKEN} = process.env;
console.log('BOT_TOKEN: ', BOT_TOKEN);

const Telegraf = require('telegraf')
const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')

const bot = new Telegraf(process.env.BOT_TOKEN)

bot.use(Telegraf.log())
/*
const keyboard = Markup.inlineKeyboard([
    Markup.urlButton('❤️', 'http://telegraf.js.org'),
    Markup.callbackButton('Delete', 'delete')
  ])

bot.on('message', (ctx) => ctx.telegram.sendCopy(ctx.chat.id, ctx.message, Extra.markup(keyboard)))
bot.action('delete', ({ deleteMessage }) => deleteMessage())
*/
bot.command('onetime', ({ reply }) =>
  reply('One time keyboard', Markup
    .keyboard(['/simple', '/inline', '/pyramid'])
    .oneTime()
    .resize()
    .extra()
  )
)

bot.command('custom', ({ reply }) => {
  return reply('Custom buttons keyboard', Markup
    .keyboard([
      ['🔍 Search', '😎 Popular'], // Row1 with 2 buttons
      ['☸ Setting', '📞 Feedback'], // Row2 with 2 buttons
      ['📢 Ads', '⭐️ Rate us', '👥 Share'] // Row3 with 3 buttons
    ])
    .oneTime()
    .resize()
    .extra()
  )
})



bot.hears('🔍 Search', ctx => ctx.reply('Yay!'))
bot.hears('📢 Ads', ctx => ctx.reply('Free hugs. Call now!'))

/////////////////////////////////
bot.command('/start', ({ reply }) => {
  return reply('Seleccione una opción', Markup
    .keyboard([
      ['EMERGENCIA'],
      ['ADVERTENCIA'],
      ['PROBAR', 'APAGAR']
    ])
    .oneTime()
    .resize()
    .extra()
  )
})

bot.hears('EMERGENCIA', ctx => ctx.reply('Alarma de emergencia!'))
bot.hears('ADVERTENCIA', ctx => ctx.reply('Alarma de adventencia!'))
bot.hears('PROBAR', ctx => ctx.reply('Prueba de dispositivos'))
bot.hears('APAGAR', ctx => ctx.reply('Apagar alarma'))





    bot.command('alarmas', (ctx) => {
        
        console.dir(ctx.update.message.chat);

        if(ctx.update.message.chat.type == "private"){

            return ctx.reply('Botones especiales', Extra.markup((markup) => {
                return markup.resize()
                  .keyboard([
                    markup.contactRequestButton('Enviar contacto'),
                    markup.locationRequestButton('Activar Alarma')
                  ])
              }))
        }else{
            ctx.telegram.sendMessage(ctx.message.chat.id, `Opción habilitada solo en chats privados`)
        }

      })


      bot.command('dispositivos', (ctx) => {
        
        console.dir(ctx.update);

            ctx.telegram.sendMessage(ctx.message.chat.id, 
              `/ListarDispositivo: Listar dispositivos
/AgregarDispositivo : Agrega
/EliminarDispositivo : Elimina
`
              )
        

      })


bot.command('pyramid', (ctx) => {
  return ctx.reply('Keyboard wrap', Extra.markup(
    Markup.keyboard(['one', 'two', 'three', 'four', 'five', 'six'], {
      wrap: (btn, index, currentRow) => currentRow.length >= (index + 1) / 2
    })
  ))
})

bot.command('simple', (ctx) => {
    console.dir(ctx.update.message.chat);
  return ctx.replyWithHTML('<b>Coke</b> or <i>Pepsi?</i>', Extra.markup(
    Markup.keyboard(['Coke', 'Pepsi'])
  ))
})

bot.command('inline', (ctx) => {
  return ctx.reply('<b>Coke</b> or <i>Pepsi?</i>', Extra.HTML().markup((m) =>
    m.inlineKeyboard([
      m.callbackButton('Coke', 'Coke'),
      m.callbackButton('Pepsi', 'Pepsi')
    ])))
})

bot.command('random', (ctx) => {
  return ctx.reply('random example',
    Markup.inlineKeyboard([
      Markup.callbackButton('Coke', 'Coke'),
      Markup.callbackButton('Dr Pepper', 'Dr Pepper', Math.random() > 0.5),
      Markup.callbackButton('Pepsi', 'Pepsi')
    ]).extra()
  )
})

bot.command('caption', (ctx) => {
  return ctx.replyWithPhoto({ url: 'https://picsum.photos/200/300/?random' },
    Extra.load({ caption: 'Oferta de la semana' })
      .markdown()
      .markup((m) =>
        m.inlineKeyboard([
          m.callbackButton('Comprar', 'plain'),
          m.callbackButton('Preguntar', 'italic')
        ])
      )
  )
})

bot.hears(/\/wrap (\d+)/, (ctx) => {
  return ctx.reply('Keyboard wrap', Extra.markup(
    Markup.keyboard(['one', 'two', 'three', 'four', 'five', 'six'], {
      columns: parseInt(ctx.match[1])
    })
  ))
})

bot.action('Dr Pepper', (ctx, next) => {
  return ctx.reply('👍').then(() => next())
})

bot.action('plain',  (ctx) => {
  ctx.telegram.sendMessage(ctx.chat.id, 
    `${ctx.chat.first_name} Gracias por comprar, deposite el valor de $100 en la cuenta 12345 del Banco CHACHA a nombre de XYZ. `    
    )
  return ctx.answerCbQuery(`Tiene 1 minuto para realizar la compra`
    );
})

bot.action('italic',  (ctx) => {
console.dir(ctx.chat);
   return ctx.answerCbQuery( 
    `Stock limitado, producto triple A`
    );
})

bot.action(/.+/, (ctx) => {
  return ctx.answerCbQuery(`Oh, ${ctx.match[0]}! Great choice`)
})

bot.on('message', (ctx) => {
  console.log(ctx.message);
})

bot.launch()